"""
This file is part of deepBND, a data-driven enhanced boundary condition implementaion for 
computational homogenization problems, using RB-ROM and Neural Networks.
Copyright (c) 2020-2023, Felipe Rocha.
See file LICENSE.txt for license information. 
Please cite this work according to README.md.
Please report all bugs and problems to <felipe.figueredo-rocha@ec-nantes.fr>, or <felipe.f.rocha@gmail.com>
"""

'''
1. (non mandatory) Run mesh_generation_RVEs.py, which create the associated 
meshes to paramRVEdataset.hd5 generated by mesh_generation_DNS.py, with:
- The meshsize ('reduced' or 'full').
- Other paths for meshes, input files and so. 
Obs: This script is intended to generate RVE meshes that will be used online or 
in tangent_predictions.py (to generate tangents.hd5 file). The later script can 
also generate the meshes on the fly (but of course will be slower). 
'''

import sys, os
import numpy as np
import deepBND.core.data_manipulation.wrapper_h5py as myhd
from deepBND.core.fenics_tools.enriched_mesh import EnrichedMesh 
from deepBND.core.multiscale.mesh_RVE import buildRVEmesh
from mpi4py import MPI

from deepBND.__init__ import *

def buildMeshRVEs_fromDNS(run, num_runs, nameParamRVEdata, nameMesh, size = 'reduced'):
    paramRVEdata = myhd.loadhd5(nameParamRVEdata, 'param')[run::num_runs,:,:]
    nrun = len(paramRVEdata)
    
    ids = np.array([run + i*num_runs for i in range(nrun)])
    
    for i in range(nrun):
        print("gererated ", i , ids[i], " mesh")
        buildRVEmesh(paramRVEdata[i,:,:], nameMesh.format(ids[i]), isOrdenated = False, size = size)


if __name__ == '__main__':
    
    if(len(sys.argv)>1):
        Ny_DNS = int(sys.argv[1])
        run = int(sys.argv[2])
        num_runs = int(sys.argv[3])
        meshsize = sys.argv[4]
    else:
        Ny_DNS = 24
        comm = MPI.COMM_WORLD
        run = comm.Get_rank()
        num_runs = comm.Get_size()
        meshsize = 'reduced'
        
    print('run, num_runs ', run, num_runs)
    
    folder = rootDataPath + "/bar_Multiscale/Ny_{0}/".format(Ny_DNS)
    folderMesh = folder + 'meshes/'
    nameParamRVEdata = folder + 'paramRVEdataset.hd5'
    nameMesh = folderMesh + 'mesh_micro_{0}_reduced.xdmf'


    buildMeshRVEs_fromDNS(run, num_runs, nameParamRVEdata, nameMesh, size = meshsize)

    
